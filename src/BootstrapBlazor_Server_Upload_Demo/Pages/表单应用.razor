@page "/表单应用"
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
<h3>表单应用</h3>

<ul class="ul-demo mb-3">
    <li>使用 <code>ValidateForm</code> 表单组件，通过设置模型属性的 <code>FileValidation</code> 标签设置自定义验证，支持文件 <b>扩展名</b> <b>大小</b> 验证，本例中设置扩展名为 <code>.png .jpg .jpeg</code>，文件大小限制为 <code>50K</code></li>
    <li>选择文件后并未开始上传文件，点击 <code>提交</code> 按钮数据验证合法后，再 <code>OnSubmit</code> 回调委托中进行上传文件操作，注意 <b>Picture</b> 属性类型为 <code>IBrowserFile</code></li>
</ul>

<ValidateForm Model="Foo" OnValidSubmit="OnSubmit">
    <div class="row g-3">
        <div class="col-12">
            <BootstrapInput @bind-Value="@Foo.Name"/>
        </div>
        <div class="col-12">
            <InputUpload @bind-Value="@Foo.Picture" />
        </div>
        <div class="col-12">
            <Button ButtonType="@ButtonType.Submit" Text="提交"></Button>
        </div>
    </div>
</ValidateForm>

@code {

    private string _baseDir = "UploadFiles\\";
    private Person Foo { get; set; } = new Person();

    private Task OnSubmit(EditContext context)
    {
        var fileName = _baseDir + Foo.Picture?.Name;
        using FileStream fs = new(fileName, FileMode.Create);
        Foo.Picture?.OpenReadStream().CopyToAsync(fs);
        return Task.CompletedTask;
    }

    private class Person
    {
        [Required]
        [StringLength(20, MinimumLength = 2)]
        public string Name { get; set; } = "Blazor";

        [Required]
        [FileValidation(Extensions = new string[] { ".png", ".jpg", ".jpeg" }, FileSize = 500 * 1024)]
        public IBrowserFile? Picture { get; set; }
    }

}